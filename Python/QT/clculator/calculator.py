# -*- coding: utf-8 -*-
from tkinter import messagebox

# Form implementation generated from reading ui file '.\calculator.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(606, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pb7 = QtWidgets.QPushButton(self.centralwidget)
        self.pb7.setGeometry(QtCore.QRect(30, 190, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb7.setFont(font)
        self.pb7.setCheckable(False)
        self.pb7.setObjectName("pb7")
        self.pb8 = QtWidgets.QPushButton(self.centralwidget)
        self.pb8.setGeometry(QtCore.QRect(120, 190, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb8.setFont(font)
        self.pb8.setCheckable(False)
        self.pb8.setObjectName("pb8")
        self.pb9 = QtWidgets.QPushButton(self.centralwidget)
        self.pb9.setGeometry(QtCore.QRect(210, 190, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb9.setFont(font)
        self.pb9.setCheckable(False)
        self.pb9.setObjectName("pb9")
        self.pb5 = QtWidgets.QPushButton(self.centralwidget)
        self.pb5.setGeometry(QtCore.QRect(120, 280, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb5.setFont(font)
        self.pb5.setCheckable(False)
        self.pb5.setObjectName("pb5")
        self.pb4 = QtWidgets.QPushButton(self.centralwidget)
        self.pb4.setGeometry(QtCore.QRect(30, 280, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb4.setFont(font)
        self.pb4.setCheckable(False)
        self.pb4.setObjectName("pb4")
        self.pb6 = QtWidgets.QPushButton(self.centralwidget)
        self.pb6.setGeometry(QtCore.QRect(210, 280, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb6.setFont(font)
        self.pb6.setCheckable(False)
        self.pb6.setObjectName("pb6")
        self.pb2 = QtWidgets.QPushButton(self.centralwidget)
        self.pb2.setGeometry(QtCore.QRect(120, 370, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb2.setFont(font)
        self.pb2.setCheckable(False)
        self.pb2.setObjectName("pb2")
        self.pb1 = QtWidgets.QPushButton(self.centralwidget)
        self.pb1.setGeometry(QtCore.QRect(30, 370, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb1.setFont(font)
        self.pb1.setCheckable(False)
        self.pb1.setObjectName("pb1")
        self.pb3 = QtWidgets.QPushButton(self.centralwidget)
        self.pb3.setGeometry(QtCore.QRect(210, 370, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb3.setFont(font)
        self.pb3.setCheckable(False)
        self.pb3.setObjectName("pb3")
        self.pb0 = QtWidgets.QPushButton(self.centralwidget)
        self.pb0.setGeometry(QtCore.QRect(120, 450, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb0.setFont(font)
        self.pb0.setCheckable(False)
        self.pb0.setObjectName("pb0")
        self.pbcom = QtWidgets.QPushButton(self.centralwidget)
        self.pbcom.setGeometry(QtCore.QRect(210, 450, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbcom.setFont(font)
        self.pbcom.setCheckable(False)
        self.pbcom.setObjectName("pbcom")
        self.pbpluse = QtWidgets.QPushButton(self.centralwidget)
        self.pbpluse.setGeometry(QtCore.QRect(330, 190, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbpluse.setFont(font)
        self.pbpluse.setCheckable(False)
        self.pbpluse.setObjectName("pbpluse")
        self.pbma = QtWidgets.QPushButton(self.centralwidget)
        self.pbma.setGeometry(QtCore.QRect(330, 290, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbma.setFont(font)
        self.pbma.setCheckable(False)
        self.pbma.setObjectName("pbma")
        self.pbx = QtWidgets.QPushButton(self.centralwidget)
        self.pbx.setGeometry(QtCore.QRect(330, 380, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbx.setFont(font)
        self.pbx.setCheckable(False)
        self.pbx.setObjectName("pbx")
        self.pbdiv = QtWidgets.QPushButton(self.centralwidget)
        self.pbdiv.setGeometry(QtCore.QRect(330, 460, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbdiv.setFont(font)
        self.pbdiv.setCheckable(False)
        self.pbdiv.setObjectName("pbdiv")
        self.pbeq = QtWidgets.QPushButton(self.centralwidget)
        self.pbeq.setGeometry(QtCore.QRect(440, 460, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbeq.setFont(font)
        self.pbeq.setCheckable(False)
        self.pbeq.setObjectName("pbeq")
        self.pb1_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pb1_2.setGeometry(QtCore.QRect(30, 450, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pb1_2.setFont(font)
        self.pb1_2.setCheckable(False)
        self.pb1_2.setObjectName("pb1_2")
        self.pbdel = QtWidgets.QPushButton(self.centralwidget)
        self.pbdel.setGeometry(QtCore.QRect(440, 190, 75, 75))
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.pbdel.setFont(font)
        self.pbdel.setCheckable(False)
        self.pbdel.setObjectName("pbdel")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(30, 30, 491, 121))
        self.textEdit.setObjectName("textEdit")
        font = QtGui.QFont()
        font.setFamily("Adobe Heiti Std R")
        font.setPointSize(18)
        self.textEdit.setFont(font)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 606, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)


        self.pb0.clicked.connect(self.on_pb0_clicked)
        self.pb1.clicked.connect(self.on_pb1_clicked)
        self.pb2.clicked.connect(self.on_pb2_clicked)
        self.pb3.clicked.connect(self.on_pb3_clicked)
        self.pb4.clicked.connect(self.on_pb4_clicked)
        self.pb5.clicked.connect(self.on_pb5_clicked)
        self.pb6.clicked.connect(self.on_pb6_clicked)
        self.pb7.clicked.connect(self.on_pb7_clicked)
        self.pb8.clicked.connect(self.on_pb8_clicked)
        self.pb9.clicked.connect(self.on_pb9_clicked)
        self.pbdel.clicked.connect(self.on_pbdel_clicked)
        self.pbpluse.clicked.connect(self.on_pbplus_clicked)
        self.pbma.clicked.connect(self.on_pbma_clicked)
        self.pbdiv.clicked.connect(self.on_pbdiv_clicked)
        self.pbx.clicked.connect(self.on_pbx_clicked)
        self.pbeq.clicked.connect(self.on_pbeq_clicked)
        self.pb1_2.clicked.connect(self.on_pbc_clicked)
        self.pbcom.clicked.connect(self.on_pbcom_clicked)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pb7.setText(_translate("MainWindow", "7"))
        self.pb8.setText(_translate("MainWindow", "8"))
        self.pb9.setText(_translate("MainWindow", "9"))
        self.pb5.setText(_translate("MainWindow", "5"))
        self.pb4.setText(_translate("MainWindow", "4"))
        self.pb6.setText(_translate("MainWindow", "6"))
        self.pb2.setText(_translate("MainWindow", "2"))
        self.pb1.setText(_translate("MainWindow", "1"))
        self.pb3.setText(_translate("MainWindow", "3"))
        self.pb0.setText(_translate("MainWindow", "0"))
        self.pbcom.setText(_translate("MainWindow", "."))
        self.pbpluse.setText(_translate("MainWindow", "+"))
        self.pbma.setText(_translate("MainWindow", "-"))
        self.pbx.setText(_translate("MainWindow", "x"))
        self.pbdiv.setText(_translate("MainWindow", "/"))
        self.pbeq.setText(_translate("MainWindow", "="))
        self.pb1_2.setText(_translate("MainWindow", "C"))
        self.pbdel.setText(_translate("MainWindow", "del"))


    def on_pb0_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '0')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb1_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '1')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb2_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '2')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb3_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '3')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb4_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '4')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb5_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '5')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb6_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '6')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb7_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '7')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb8_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '8')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pb9_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            self.textEdit.setText(current_text + '9')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pbdel_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            new_text = current_text[:-1]
            self.textEdit.setText(new_text)

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pbplus_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            checknumber = current_text[-1]

            if checknumber.isdigit():
                self.textEdit.setText(current_text + '+')

        except  Exception as e:
            print(f"An error occurred: {e}")
    def on_pbma_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            checknumber = current_text[-1]

            if checknumber is not '-':
                self.textEdit.setText(current_text + '-')

        except  Exception as e:
            print(f"An error occurred: {e}")
    def on_pbx_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            checknumber = current_text[-1]

            if checknumber.isdigit():
                self.textEdit.setText(current_text + '*')

        except  Exception as e:
            print(f"An error occurred: {e}")
    def on_pbdiv_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            checknumber = current_text[-1]

            if checknumber.isdigit():
                self.textEdit.setText(current_text + '/')

        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pbeq_clicked(self):
        try:

            current_text = self.textEdit.toPlainText()
            checknumber = current_text[-1]

            if checknumber.isdigit():
                result = eval(current_text)
                self.textEdit.setText(str(result))
            else:
                messagebox.showwarning("잘못된 입력입니다.")

        except  Exception as e:
            print(f"An error occurred: {e}")
    def on_pbc_clicked(self):
        try:
            self.textEdit.setText('')


        except  Exception as e:
            print(f"An error occurred: {e}")

    def on_pbcom_clicked(self):
        try:
            current_text = self.textEdit.toPlainText()
            checknumber = current_text[-1]
            if current_text.strip() == '' or checknumber in ['+', '-', '*', '/']:
                pass
            else:
                # 현재 텍스트가 이미 '.'을 포함하고 있는지 확인합니다.
                if '.' in current_text.split('+')[-1].split('-')[-1].split('*')[-1].split('/')[-1]:
                    # 이미 '.'이 있으면 아무것도 추가하지 않습니다.
                    pass
                elif checknumber.isdigit():
                    self.textEdit.setText(current_text + '.')

        except  Exception as e:
            print(f"An error occurred: {e}")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
